//AccEventModel defines the structure of the event item

module.exports = (sequelize, DataTypes) => {
    const AccEvent = sequelize.define("AccEvent", {
        // Name of the event represented by a string
        name: {
            type: DataTypes.STRING,
            allowNull: false,
        },
        // Amount associated with the event defined as a decimal to two places, not required as events may not have a predefined cost
        amount: {
            type: DataTypes.DECIMAL(10, 2),
            allowNull: true,
        },
        // Frequency represents how often the event repeats
        frequency: {
            type: DataTypes.ENUM('once', 'daily', 'weekly', 'monthly', 'annually'),
            allowNull: false,
        },
        // Type is a string that represents the specific kind of event, such as a wedding or holiday
        type: {
            type: DataTypes.STRING,
            allowNull: false,
        },
        // Color associated with the event, generated by the type chosen
        color: {
            type: DataTypes.STRING,
            allowNull: false,
        },
        // Start date is the date selected for the event to either occur or begin repeating
        startDate: {
            type: DataTypes.DATE,
            allowNull: false,
        },
        // End date is an optional field that is used if the event takes up more than one day
        endDate: {
            type: DataTypes.DATE,
            allowNull: true,
        },
        // The day of the week a weekly event repeats on, represented by one of seven numbers 0-6 which correlate to the days of the week in order
        dayOfWeek: {
            type: DataTypes.INTEGER,
            allowNull: true,
            validate: {
                min: 0,
                max: 6
            }
        },
        // The day of the month monthly or annual events repeat on, represented by an integer 1-31 that represent possible days of the month
        dayOfMonth: {
            type: DataTypes.INTEGER,
            allowNull: true,
            validate: {
                min: 1,
                max: 31
            }
        },
        // The month is when annual events repeat, represented by an int 1-12 that correlates to the 12 months in order
        month: {
            type: DataTypes.INTEGER,
            allowNull: true,
            validate: {
                min: 1,
                max: 12
            }
        },
    })

    // Associations
    AccEvent.associate = (models) => {
        // Multiple events can be correlated to a user
        AccEvent.belongsTo(models.User, {
            foreignKey: {
                allowNull: false,
            },
            onDelete: 'CASCADE'
        })
    }

    return AccEvent
}